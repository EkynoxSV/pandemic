breed[humains humain]

humains-own
[
  arme?
]

to devient-infecte
   ;on lache l'arme si on en a une
  if(arme?)[
    ask patches in-radius 0[
      sprout-armes 1[
        set size 1
        set shape "lance"
      ]
    ]
  ]
  ask patches in-radius 0[
   sprout-zombies 1[
      set color grey
      set shape "zombie"
   ]
  ]  
  die
end

to init-humains
  create-humains nb_individus[
    set shape "person"
    move-to one-of patches with [accessible?]
    set color green
    set arme? false
  ]
end

to deplacement-fuite
  let zombie_plus_proche min-one-of (zombies) [distance myself]
  let patches_possibles (patches in-radius dist_max_deplacement) with [accessible?]
  if (any? patches_possibles) [
    move-to max-one-of patches_possibles [distance zombie_plus_proche]
  ]
end

to deplacement-humains
  ifelse (any? ((zombies) in-radius dist_perception)) [	   
    deplacement-fuite
  ]
  [
    ifelse(any? (patches in-radius dist_max_deplacement) with [arme_in?] and not arme?)[
    deplacement-ramassage
    ]
  [
    deplacement-aleatoire
  ]
  ]
end


to deplacement-ramassage
  let patches_avec_arme (patches in-radius dist_max_deplacement) with [arme_in?]
  move-to one-of patches_avec_arme
  ; on ramasse l'arme
  set arme? true
  ask one-of armes in-radius 0[
    die
  ]
  ;on regarde si il n'y a plus d'arme au sol pour en informer le patch
  let nombre_armes_sol count armes in-radius 0
  ; si il ny a plus d'arme on pr√©viens le patch
  if (nombre_armes_sol = 0)[
    ask patches in-radius 0[
      set arme_in? false
    ]
  ]
end